// Generated by CoffeeScript 1.10.0
(function() {
  window.Command = (function() {
    var VROME_HIDDEN, toggleHiddenElems;

    function Command() {}

    VROME_HIDDEN = '__vrome_hidden';

    Command.reloadExtension = function() {
      return Post({
        action: 'Develop.reloadExtension'
      });
    };

    desc(Command.reloadExtension, 'Reload Extension');

    Command.print = function() {
      CmdBox.remove();
      return setTimeout(window.print, 500);
    };

    desc(Command.print, 'Print the current page');

    toggleHiddenElems = function(all, elems) {
      if (all.length > 1) {
        return all.removeAttr(VROME_HIDDEN);
      } else {
        return elems.attr(VROME_HIDDEN, '1');
      }
    };

    Command.imagesToggle = function() {
      return toggleHiddenElems($("img[" + VROME_HIDDEN + "]"), $('img'));
    };

    desc(Command.imagesToggle, 'Toggle images');

    Command.imagesOnly = function() {
      var $body, div, images;
      $body = $('body');
      div = $('[__vrome_images]');
      if (div.length > 0) {
        return toggleHiddenElems($body.children(), div.remove());
      } else {
        images = $('img').filter(function(_, e) {
          return isElementVisible($(e), true);
        }).clone();
        toggleHiddenElems([], $body.children());
        return $body.append($('<div>', {
          __vrome_images: '1'
        }).append(images));
      }
    };

    desc(Command.imagesOnly, 'Only show images, run again to rollback');

    Command.javascript = function() {
      return console.log(eval(CmdBox.get().argument));
    };

    desc(Command.javascript, 'Run javascript (jQuery)');

    Command.source = function() {
      return Post({
        action: 'Command.source',
        sources: CmdBox.get().argument
      });
    };

    desc(Command.source, 'Source javascript/style files');

    Command.css = function() {
      var div;
      div = $('style[__vrome_style]');
      if (div.length === 0) {
        div = $('<style>', {
          __vrome_style: 1
        });
        $('body').append(div);
      }
      return div.text(div.text() + '\n' + CmdBox.get().argument);
    };

    desc(Command.css, 'Add CSS styles');

    return Command;

  })();

}).call(this);
