// Generated by CoffeeScript 1.10.0
(function() {
  window.CmdBox = (function() {
    var BOX_ID, cmdBoxInput, cmdBoxTitle, ref;

    function CmdBox() {}

    ref = ['_vrome_cmd_box', '_vrome_cmd_input_box'], BOX_ID = ref[0], CmdBox.INPUT_BOX_ID = ref[1];

    cmdBoxTitle = function(forceCreate) {
      var elems;
      elems = $("#" + BOX_ID + " span");
      if (forceCreate && elems.length === 0) {
        CmdBox.cmdBox().append($('<span>'));
        elems = $("#" + BOX_ID + " span");
      }
      return elems;
    };

    cmdBoxInput = function(forceCreate) {
      var elems;
      elems = $("#" + BOX_ID + " input");
      if (forceCreate && elems.length === 0) {
        CmdBox.cmdBox().append($('<input>', {
          id: CmdBox.INPUT_BOX_ID
        }));
        elems = $("#" + BOX_ID + " input");
      }
      return elems;
    };

    CmdBox.isActive = function() {
      var ref1;
      return ((ref1 = document.activeElement) != null ? ref1.id : void 0) === CmdBox.INPUT_BOX_ID;
    };

    CmdBox.cmdBox = function() {
      var box;
      box = $("#" + BOX_ID);
      if (box.length === 0) {
        box = $('<div>', {
          id: BOX_ID
        });
        $(document.documentElement).prepend(box);
      }
      return box;
    };

    CmdBox.set = function(o, forceCreate) {
      var input, length, ref1, start;
      if (forceCreate == null) {
        forceCreate = true;
      }
      if (typeof o.title === 'string') {
        cmdBoxTitle(forceCreate).unbind().html(o.title).mousedown(o.mouseOverTitle);
      }
      if (typeof o.content === 'string') {
        input = cmdBoxInput(forceCreate).val(o.content);
        if (forceCreate) {
          input.unbind().keydown(o.pressDown).keyup(o.pressUp).select();
        }
        input.keydown(function(e) {
          return e.stopPropagation();
        });
        input.keyup(function(e) {
          return e.stopPropagation();
        });
        if (typeof o.selection === 'string') {
          ref1 = [input.val().indexOf(o.selection), o.selection.length], start = ref1[0], length = ref1[1];
          input.prop({
            selectionStart: start,
            selectionEnd: start + length
          });
        } else if (o.selectLast) {
          input.prop({
            selectionStart: input.val().length
          });
        }
      }
      if (o.timeout) {
        return setTimeout(CmdBox.remove, Number(o.timeout));
      }
    };

    CmdBox.softSet = function(o) {
      return CmdBox.set(o, false);
    };

    CmdBox.get = function() {
      var _content, argument, content, end, input, ref1, start;
      input = cmdBoxInput(false);
      ref1 = [input.val() || '', input.prop('selectionStart'), input.prop('selectionEnd')], content = ref1[0], start = ref1[1], end = ref1[2];
      _content = "" + content.slice(0, start) + content.slice(end);
      argument = content.split(' ').slice(1).join(' ');
      return {
        title: cmdBoxTitle(false).html() || '',
        content: content,
        selection: content.slice(start, +end + 1 || 9e9),
        _content: _content,
        argument: argument
      };
    };

    CmdBox.remove = function() {
      return $("#" + BOX_ID).unbind().remove();
    };

    CmdBox.blur = function() {
      return cmdBoxInput(false).blur();
    };

    return CmdBox;

  })();

}).call(this);
