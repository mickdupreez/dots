// Generated by CoffeeScript 1.10.0
(function() {
  window.Unfocus = (function() {
    var addOnFocus, disabledElements, observer, onClick, onFocus, removeOnFocus;

    function Unfocus() {}

    disabledElements = [];

    observer = null;

    onFocus = function(e) {
      if (Option.get('disable_autofocus')) {
        return e.target.blur();
      }
    };

    addOnFocus = function(element) {
      var child, i, len, ref;
      if (isEditableElement(element)) {
        element.addEventListener('focus', onFocus, false);
        disabledElements.push(element);
      }
      ref = element.children;
      for (i = 0, len = ref.length; i < len; i++) {
        child = ref[i];
        addOnFocus(child);
      }
    };

    removeOnFocus = function() {
      var element, i, len;
      for (i = 0, len = disabledElements.length; i < len; i++) {
        element = disabledElements[i];
        element.removeEventListener('focus', onFocus, false);
      }
      return disabledElements = [];
    };

    onClick = function(e) {
      Unfocus.didReceiveInput();
      return e.target.focus();
    };

    Unfocus.didReceiveInput = function() {
      if (disabledElements.length === 0) {
        return;
      }
      observer.disconnect();
      $(document.documentElement).off('click', onClick);
      return removeOnFocus();
    };

    $(document.documentElement).click(onClick).focus();

    observer = new WebKitMutationObserver(function(mutations) {
      var addedNode, i, j, len, len1, mutation, ref;
      for (i = 0, len = mutations.length; i < len; i++) {
        mutation = mutations[i];
        ref = mutation.addedNodes;
        for (j = 0, len1 = ref.length; j < len1; j++) {
          addedNode = ref[j];
          if (addedNode.nodeType === 1) {
            addOnFocus(addedNode);
          }
        }
      }
    });

    observer.observe(document.documentElement, {
      childList: true,
      subtree: true
    });

    addOnFocus(document.documentElement);

    return Unfocus;

  })();

}).call(this);
