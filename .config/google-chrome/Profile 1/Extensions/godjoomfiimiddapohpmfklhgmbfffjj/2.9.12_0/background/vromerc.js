// Generated by CoffeeScript 1.10.0
(function() {
  window.Vromerc = (function() {
    function Vromerc() {}

    Vromerc.init = function() {
      var interval;
      Vromerc.loadAll();
      interval = (Settings.get('onlineVromercReloadInterval') || 5) * 1000 * 60;
      return setInterval(Vromerc.loadAll, interval);
    };

    Vromerc.loadAll = function() {
      Vromerc.loadOnline();
      return Vromerc.loadLocal();
    };

    Vromerc.parse = function(text) {
      var config, configs, i, isPlus, key, len, line, method, ref, ref1, settingKey, settingValue, settings, urlMarks, value;
      settings = {
        map: {},
        unmap: {},
        imap: {},
        iunmap: {},
        cmap: {},
        set: {}
      };
      configs = [];
      urlMarks = Settings.get('url_marks') || {};
      ref = text.split('\n');
      for (i = 0, len = ref.length; i < len; i++) {
        line = ref[i];
        line = line.trim();
        ref1 = line.split(/\s+/), method = ref1[0], key = ref1[1], value = ref1[2];
        if (method.endsWith('map')) {
          configs.push(line);
          settings[method][key] = value != null ? value : true;
        } else if (method === 'set') {
          configs.push(line);
          config = line.trimFirst(method);
          settingKey = config.split(/\+?=/)[0];
          settingValue = config.trimFirst(settingKey + '=').trimFirst(settingKey + '+=');
          if (!isNaN(settingValue)) {
            settingValue = Number(settingValue);
          }
          isPlus = /^\s*set\s+\w+\+=/.test(line);
          if (settingKey.startsWith('qm_')) {
            urlMarks[settingKey.replace('qm_', '')] = settingValue;
          } else {
            settings.set[settingKey] = [settingValue, isPlus];
          }
        } else if (/^\s*$/.test(line)) {
          configs.push(line);
        } else {
          configs.push(line.replace(/^"?\s{0,1}/, '" '));
        }
      }
      Settings.add('url_marks', urlMarks);
      Settings.add('configure', settings);
      return configs.join('\n');
    };

    Vromerc.loadLocal = function() {
      return $.get(getLocalServerUrl()).done((function(_this) {
        return function(data) {
          var vromerc;
          if (data) {
            vromerc = "\" Begin Local Vromerc generated\n" + data + "\n\" End Local Vromerc generated\n\n";
            vromerc += (Settings.get('vromerc') || '').replace(/" Begin Local Vromerc generated\n(.|\n)+\n" End Local Vromerc generated\n?\n?/g, '');
            return Settings.add({
              vromerc: _this.parse(vromerc)
            });
          }
        };
      })(this));
    };

    Vromerc.loadOnline = function() {
      var url;
      url = Settings.get('onlineVromercUrl');
      if (!url) {
        return;
      }
      url = url.getValidURL();
      return $.get(url).done((function(_this) {
        return function(data) {
          var vromerc;
          vromerc = "\" Begin Online Vromerc generated\n" + data + "\n\" End Online Vromerc generated\n\n";
          vromerc += (Settings.get('vromerc') || '').replace(/" Begin Online Vromerc generated\n(.|\n)+\n" End Online Vromerc generated\n?\n?/g, '');
          return Settings.add({
            vromerc: _this.parse(vromerc),
            onlineVromercLastUpdatedAt: new Date().toString()
          });
        };
      })(this));
    };

    return Vromerc;

  })();

}).call(this);
