// Generated by CoffeeScript 1.10.0
(function() {
  var changeAccessButtonStatus, checkServerStatus, grantOAuthAccess, onAuthorize, render, renderPages, revokeOAuthAccess, saveOptions, saveSettings, setSettings, switchTab;

  render = function(elem, template, callback) {
    return $.get(chrome.extension.getURL(template), function(data) {
      elem.html(data);
      return callback();
    });
  };

  switchTab = function(tabName) {
    $('nav #tabs li a').removeClass('selected');
    $("nav #tabs li a[href=" + tabName + "]").addClass('selected');
    $('section .tabContent').hide();
    return $(tabName + "Content").show();
  };

  renderPages = function(callback) {
    var count, decreaseCount;
    count = 6;
    decreaseCount = function() {
      if (--count === 0) {
        return callback();
      }
    };
    render($('#dashboardContent'), '/README.html', decreaseCount);
    render($('#settingContent'), '/background/html/setting.html', decreaseCount);
    render($('#donatesContent'), '/background/html/donates.html', decreaseCount);
    render($('#changelogContent'), '/background/html/changelog.html', decreaseCount);
    render($('#thanksContent'), '/background/html/thanks.html', decreaseCount);
    render($('#featuresContent'), '/background/html/features.html', decreaseCount);
    switchTab(document.location.hash || '#setting');
    return $('nav #tabs li a').click(function() {
      return switchTab($(this).attr('href'));
    });
  };

  setSettings = function() {
    $('#vromerc').val(Settings.get('vromerc'));
    $('#onlineVromercUrl').val(Settings.get('onlineVromercUrl'));
    $('#onlineVromercReloadInterval').val(Settings.get('onlineVromercReloadInterval'));
    $('#onlineVromercLastUpdatedAt').val(Settings.get('onlineVromercLastUpdatedAt'));
    return changeAccessButtonStatus(oauth.hasToken());
  };

  saveSettings = function() {
    Settings.add({
      onlineVromercUrl: $('#onlineVromercUrl').val(),
      onlineVromercReloadInterval: $('#onlineVromercReloadInterval').val(),
      vromerc: Vromerc.parse($('#vromerc').val())
    });
    return setSettings();
  };

  saveOptions = function() {
    saveSettings();
    Vromerc.loadAll();
    return $('#saved').show().fadeOut(3000);
  };

  checkServerStatus = function() {
    var request;
    request = $.ajax(getLocalServerUrl());
    request.done(function() {
      $('#server_status').attr('src', '/images/server_online.png');
      return $('#server_status').attr('alt', 'Server Online');
    });
    return request.fail(function() {
      $('#server_status').attr('src', '/images/server_offline.png');
      return $('#server_status').attr('alt', 'Server Offline. Run ./vrome');
    });
  };

  onAuthorize = function() {
    changeAccessButtonStatus(true);
    return delete chrome.extension.getBackgroundPage().OnAuthorizeCallBack;
  };

  grantOAuthAccess = function() {
    chrome.extension.getBackgroundPage().OnAuthorizeCallBack = onAuthorize;
    return chrome.tabs.create({
      url: '/oauth/chrome_ex_oauth.html'
    });
  };

  revokeOAuthAccess = function() {
    chrome.extension.getBackgroundPage().oauth.clearTokens();
    return changeAccessButtonStatus(false);
  };

  changeAccessButtonStatus = function(granted) {
    $('#revokeAccess').get(0).disabled = !granted;
    return $('#grantAccess').get(0).disabled = granted;
  };

  $(function() {
    $('body').on('click', '.saveOptions', saveOptions);
    $('body').on('click', '.closeWindow', window.close);
    $('body').on('click', '#grantAccess', grantOAuthAccess);
    return $('body').on('click', '#revokeAccess', revokeOAuthAccess);
  });

  Settings.init(function() {
    return renderPages(function() {
      setSettings();
      return setInterval(checkServerStatus, 1000);
    });
  });

}).call(this);
