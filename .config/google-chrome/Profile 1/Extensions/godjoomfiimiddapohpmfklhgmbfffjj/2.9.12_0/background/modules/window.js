// Generated by CoffeeScript 1.10.0
(function() {
  window.Window = (function() {
    function Window() {}

    Window.create = function() {
      return chrome.windows.create();
    };

    Window.close = function(msg) {
      return chrome.windows.remove(msg.tab.windowId);
    };

    Window.closeAll = function() {
      return chrome.windows.getAll(function(windows) {
        var i, len, w;
        for (i = 0, len = windows.length; i < len; i++) {
          w = windows[i];
          chrome.windows.remove(w.id);
        }
      });
    };

    Window.capture = function(msg) {
      return chrome.tabs.captureVisibleTab(msg.tab.windowId, {
        format: 'png'
      }, function(url) {
        return Post(msg.tab, {
          action: 'Window.capture',
          url: url
        });
      });
    };

    Window.savePage = function(msg) {
      return chrome.pageCapture.saveAsMHTML({
        tabId: msg.tab.id
      }, function(mhtml) {
        var filename;
        filename = (msg.filename || msg.tab.title).replace(/(.mhtml)?$/, '.mhtml');
        saveAs(mhtml, filename);
        return Post(msg.tab, {
          action: 'Window.saveAs',
          data: mhtml,
          filename: filename
        });
      });
    };

    Window.moveTabToWindowWithIncognito = function(tab, incognito, callback) {
      return chrome.windows.getAll({
        populate: true
      }, function(windows) {
        var i, len, w;
        for (i = 0, len = windows.length; i < len; i++) {
          w = windows[i];
          if (w.type === 'normal' && w.incognito === incognito && w.id !== tab.windowId) {
            chrome.tabs.create({
              windowId: w.id,
              url: tab.url
            });
            if (typeof callback === "function") {
              callback(tab);
            }
            return;
          }
        }
        chrome.windows.create({
          url: tab.url,
          incognito: incognito
        });
        return typeof callback === "function" ? callback(tab) : void 0;
      });
    };

    return Window;

  })();

}).call(this);
